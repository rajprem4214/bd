1. Populate the database with at least 15 documents:

use LibraryDB

db.Books.insertMany([
  {
    "Name": "Understanding bioethics and the law",
    "Book_id": "B01",
    "Book_Author": "Schaller, Barry R",
    "Publication_Year": 2008,
    "Genre": "Philosophy",
    "No_of_copies": 3,
    "Review": "Excellent"
  },
  // Add more documents here...
])
2. List all the records having Publication_Year in the range of 2000-2012:

db.Books.find({
  "Publication_Year": { $gte: 2000, $lte: 2012 }
})
3. List all the books belonging to the Genre "Fiction":

db.Books.find({
  "Genre": "Fiction"
})
4. Count the number of books whose review is "Average":

db.Books.countDocuments({
  "Review": "Average"
})
5. Find out all the books that have less than 3 copies and Publication_Year in the range of 1995-2003:

db.Books.find({
  "No_of_copies": { $lt: 3 },
  "Publication_Year": { $gte: 1995, $lte: 2003 }
})
6. Delete a book from the database whose Book_id is "B014":

db.Books.deleteOne({
  "Book_id": "B014"
})
7. Update the review of the books to "Excellent" if they have more than 5 copies:

db.Books.updateMany({
  "No_of_copies": { $gt: 5 }
},
{
  $set: { "Review": "Excellent" }
})
8. Delete the 11th book in the table and update the book id of the next books to reflect this data manipulation operation:

var bookToDelete = db.Books.findOne({}).skip(10)
db.Books.deleteOne(bookToDelete)

var booksToUpdate = db.Books.find({ "Book_id": { $gt: bookToDelete.Book_id } })
booksToUpdate.forEach(function(book) {
  var newBookId = "B" + (parseInt(book.Book_id.substring(1)) - 1).toString().padStart(2, '0')
  db.Books.updateOne({ "_id": book._id }, { $set: { "Book_id": newBookId } })
})
9. Group all the books by their genre and identify the books with the highest review in each genre:

db.Books.aggregate([
  {
    $group: {
      _id: "$Genre",
      maxReview: { $max: "$Review" },
      books: { $push: "$$ROOT" }
    }
  }
])
10. Apply Map-reduce aggregation function to project the books by their names and find the list of genres:

db.Books.mapReduce(
  function() {
    emit(this.Name, this.Genre);
  },
  function(key, values) {
    return Array.from(new Set(values));
  },
  { out: "BookGenres" }
)

// Retrieve the result
db.BookGenres.find()